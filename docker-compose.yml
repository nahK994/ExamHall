version: '3'
services:

  db:
    container_name: user
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=user_db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root

  user:
    container_name: user
    build: User
    restart: always
    depends_on:
      - db
    volumes:
      - ./User:/app
    ports:
      - 8004:8004
    command: bash -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
#
#  user_db:
#    container_name: user_db
#    image: postgres
#    restart: always
#    environment:
#      - POSTGRES_DB=user_db
#      - POSTGRES_USER=root
#      - POSTGRES_PASSWORD=root

#  archive_db:
#    container_name: archive_db
#    image: postgres
#    restart: always
#    environment:
#      - POSTGRES_DB=archive_db
#      - POSTGRES_USER=root
#      - POSTGRES_PASSWORD=root
#
#  exam_db:
#    container_name: exam_db
#    image: postgres
#    restart: always
#    environment:
#      - POSTGRES_DB=exam_db
#      - POSTGRES_USER=root
#      - POSTGRES_PASSWORD=root
#
#  result_db:
#    container_name: result_db
#    image: postgres
#    restart: always
#    environment:
#      - POSTGRES_DB=result_db
#      - POSTGRES_USER=root
#      - POSTGRES_PASSWORD=root

#  user:
#    container_name: user
#    build: User
#    restart: always
#    depends_on:
#      - user_db
#    volumes:
#      - ./User:/app
#    ports:
#      - 8004:8004
#    command: bash -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8004"

#  archive_consumer:
#    container_name: archive_consumer
#    build: Archive
#    restart: always
#    volumes:
#      - ./Archive:/app
#    command: 'python3 -u consumer.py'
#    depends_on:
#      - archive_db
#
#  archive:
#    container_name: archive
#    build: Archive
#    restart: always
#    depends_on:
#      - archive_db
#    volumes:
#      - ./Archive:/app
#    ports:
#      - 8001:8001
#    command: bash -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8001"
#
#  exam:
#    container_name: exam
#    build: Exam
#    restart: always
#    depends_on:
#      - exam_db
#    volumes:
#      - ./Exam:/app
#    ports:
#      - 8002:8002
#    command: bash -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8002"
#
#  result_consumer:
#    container_name: result_consumer
#    build: Result
#    restart: always
#    volumes:
#      - ./Result:/app
#    command: 'python3 -u consumer.py'
#    depends_on:
#      - result_db
#
#  result:
#    container_name: result
#    build: Result
#    restart: always
#    depends_on:
#      - result_db
#    volumes:
#      - ./Result:/app
#    ports:
#      - 8003:8003
#    command: bash -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8003"
  
#   frontend:
#     container_name: frontend
#     build: Frontend
#     restart: always
#     ports:
#       - 8080:80
#     depends_on:
#       - user
#       - archive
#       - exam
#       - result